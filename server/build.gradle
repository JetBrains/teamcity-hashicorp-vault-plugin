
apply plugin: 'io.github.rodm.teamcity-server'
apply plugin: 'io.github.rodm.teamcity-environments'

ext {
    downloadsDir = project.findProperty('downloads.dir') ?: "$rootDir/downloads"
    serversDir = project.findProperty('servers.dir') ?: "$rootDir/servers"
}

dependencies {
    implementation(project(':common')) {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation("org.springframework.vault:spring-vault-core:$sprint_vault_version") {
        exclude group: 'org.springframework'
    }

    compileOnly "org.jetbrains.teamcity.internal:web:$teamcity_version"
    compileOnly "org.jetbrains.teamcity.internal:server:$teamcity_version"
    compileOnly "org.jetbrains.teamcity:oauth:$teamcity_version"

    agent project(path: ':agent', configuration: 'plugin')

    testImplementation(testFixtures(project(':common')))
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "org.jetbrains.teamcity:oauth:$teamcity_version"
}

teamcity {
    version = teamcity_version
    allowSnapshotVersions = true

    server {
        descriptor {
            name = 'teamcity-vault-support'
            displayName = 'HashiCorp Vault Support'
            description = 'This plugin allows you to set up an integration between JetBrains TeamCity and HashiCorp Vault. With this integration in place, TeamCity builds can retrieve secrets from the remote Vault storage, which allows you to avoid storing sensitive data locally.'
            version = project.version

            vendorName = 'JetBrains'
            vendorUrl = 'https://www.jetbrains.com'

            useSeparateClassloader = true
            nodeResponsibilitiesAware = true
        }
        archiveName = "${project.rootProject.name}.zip"

        files {
            into("kotlin-dsl") {
                from("kotlin-dsl")
            }
        }
    }

    environments {
        downloadsDir = project.downloadsDir
        baseHomeDir = project.serversDir
        baseDataDir = 'data'

        teamcity2018_1 {
            version = '2018.1.5'
            serverOptions = "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5600 -DTC.res.disableAll=true -Dteamcity.development.mode=true"
            agentOptions = "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5601"
        }
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions { jvmTarget = '1.8' }
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}


// Do not include version into plugin archive name
project.tasks.getByName('serverPlugin').version = ''