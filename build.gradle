/*
 * Copyright 2000-2020 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
    id "io.github.rodm.teamcity-server" version "1.5"
}

ext {
    ext.kotlin_version = '1.7.0'
    version_prefix = '0.1'
    teamcity_version = '2023.05'
    // compile
    spring_version = '5.3.18'
    sprint_vault_version = '2.3.3'
    httpclient_version = '4.3.6' // version is relevant to one used inside TeamCity
    // tests
    jetty_version = '9.4.19.v20190610'
    testcontainers_version = '1.15.2'
    assertj_version = '1.7.1'
    mockito_version = '4.1.0'
    jackson_version = '2.14.3'
    spacePackagesUrl = "https://packages.jetbrains.team/maven/p/tc/maven"
    mavenRepositoryUser = findProperty('maven.repository.user')
    mavenRepositoryPassword = findProperty('maven.repository.password')
    caffeine_version = "2.4.0"
}

group = 'org.jetbrains.teamcity.vault'
version = "${version_prefix}-SNAPSHOT"

if (System.getenv('BUILD_NUMBER') != null) {
    version = "${System.env.BUILD_NUMBER}"
}


subprojects {
    group = rootProject.group
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'java-test-fixtures'
    apply plugin: 'kotlin'

    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions { jvmTarget = '1.8' }
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    tasks.withType(org.gradle.jvm.tasks.Jar) { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

    dependencies {
        implementation('com.amazonaws:aws-java-sdk-core:1.12.122') { dep ->
            ['org.apache.httpcomponents', 'commons-logging'].each{ group -> dep.exclude group: group }
        }
        implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version")
        testImplementation("org.jetbrains.teamcity.internal:integration-tests:${teamcity_version}")
        testImplementation "com.github.ben-manes.caffeine:caffeine:${caffeine_version}"
        testImplementation "org.jetbrains.teamcity:tests-support:${teamcity_version}"
        testImplementation("javax.servlet:javax.servlet-api:3.1.0")
        testImplementation "org.mockito:mockito-testng:0.4.23"
        testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
        testImplementation("com.willowtreeapps.assertk:assertk:0.26.1")
    }
    test {
        useTestNG()
        testLogging.showStandardStreams = true
    }


    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        maven { url "https://download.jetbrains.com/teamcity-repository/" }
        google()
        maven {
            url = 'https://packages.jetbrains.team/maven/p/tc/maven'
            credentials {
                username = mavenRepositoryUser
                password = mavenRepositoryPassword
            }
        }
    }

    if (System.getenv('TEAMCITY_VERSION') != null) {
        test.ignoreFailures = true
    }


    configurations.runtimeClasspath {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
    }
}
repositories {
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    google()
}

configurations.testImplementation {
    exclude group: "org.jetbrains.teamcity", module: "server-api"
    exclude group: "org.jetbrains.teamcity", module: "server-web-api"
    exclude group: "org.jetbrains.teamcity.internal", module: "plugins"
}